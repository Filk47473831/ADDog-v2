<main>
    <div class="container-fluid">
      <h3 class="mt-4">Edit User</h3>
      <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/">Dashboard</a></li>
        <li class="breadcrumb-item active">Edit User</li>
      </ol>
      <div class="col-sm-12 col-md-10 col-lg-8 col-xl-6">
        <div class="card shadow-lg border-0 rounded-lg mt-2">
          <div id="card-body" class="card-body">
                <h6 class="mb-3">Update user account attributes</h6>
                <div class="form-group">
                    <label class="small mb-1" for="inputUser">Select User</label>
                    <input tabindex="1" autofocus autocomplete="chrome-off" required class="form-control" id="inputUser" type="text" placeholder="e.g. John Smith" value=""/>
                    <input disabled tabindex="-1" readonly style="margin-top:3px;border:0px;font-size:0.8rem" class="form-control" id="inputUser-id">
                </div>
                <div class="form-group">
                  <label class="small mb-1" for="inputFirstName">First Name</label>
                  <input autofocus tabindex="2" autocomplete="off" class="form-control" id="inputFirstName" type="text" placeholder="John" value=""/>
                  <div class="invalid-feedback"></div>
                </div>
                <div class="form-group">
                  <label class="small mb-1" for="inputLastName">Last Name</label>
                  <input tabindex="3" autocomplete="off" class="form-control" id="inputLastName" type="text" placeholder="Smith" value=""/>
                  <div class="invalid-feedback"></div>
                </div>
                  <div class="form-group">
                    <label class="small mb-1" for="inputUPNSuffix">UPN Suffix</label>
                    <input tabindex="4" autocomplete="off" class="form-control" id="inputUPNSuffix" type="text" placeholder="e.g. arunside.school" value=""/>
                  </div>
                  <div class="form-group">
                    <label class="small mb-1" for="inputEmailAddress">Email Address</label>
                    <input tabindex="5" autocomplete="off" class="form-control" id="inputEmailAddress" type="text" placeholder="e.g. jsmith@arunside.school" value=""/>
                  </div>
                  <div class="form-group">
                    <label class="small mb-1" for="inputHomeDirectory">Home Directory</label>
                    <input tabindex="6" autocomplete="off" class="form-control" id="inputHomeDirectory" type="text" placeholder="e.g. \\AS-DC\Staff$\%USERNAME%" value=""/>
                  </div>
                  <div class="form-group">
                    <label class="small mb-1" for="inputHomeDrive">Home Drive Letter</label>
                    <input tabindex="7" autocomplete="off" class="form-control" id="inputHomeDrive" type="text" placeholder="e.g. U" maxlength="1" value=""/>
                  </div>
                  <div class="form-group">
                    <label class="small mb-1" for="inputProfilePath">Profile Path</label>
                    <input tabindex="8" autocomplete="off" class="form-control" id="inputProfilePath" type="text" placeholder="e.g. \\AS-DC\Profiles$\%USERNAME%" value=""/>
                  </div>
                  <div class="form-group">
                    <label class="small mb-1" for="inputScriptPath">Logon Script</label>
                    <input tabindex="9" autocomplete="off" class="form-control" id="inputScriptPath" type="text" placeholder="e.g. Staff.bat" value=""/>
                  </div>
                  <div class="form-group">
                    <label class="small mb-1" for="inputGroupDN">Member Group Name's (1 Per Line)</label>
                    <textarea tabindex="-1" disabled class="form-control" id="inputGroupDN" type="text" rows="7" placeholder="e.g. Staff"></textarea>
                  </div>
                  <div class="form-group">
                    <label class="small mb-1" for="ouTree">User OU</label>
                    <input tabindex="-1" disabled autocomplete="off" required style="border:0px" required class="form-control mt-3" id="inputUserOU" value="" placeholder="User OU">
                  </div>

                <div class="form-group d-flex align-items-center justify-content-between mt-4 mb-0">
                  <input tabindex="10" id="editUserBtn" onclick="editUser()" type="button" class="btn btn-success" href="#" value="Edit User">&nbsp;&nbsp;
                  <div id="invalid-feedback" class="invalid-feedback"></div>
                </div>
          </div>
        </div>
      </div>
    </div>
  </main>
  <script src="js/apiquery.js"></script>
  <script>

  const api = new API();
  loadAutocomplete();

  function isEmpty(obj) {
    for(var key in obj) {
        if(obj.hasOwnProperty(key))
            return false;
    }
    return true;
  }

  function lookupUser(username) {
    api.lookupUser(username,function(response) {
      if(response !== null) {
        if(response.givenName !== undefined) {
          var givenName = response.givenName
          document.getElementById("inputFirstName").value = givenName;
        }
        if(response.sn !== undefined) {
          var lastName = response.sn
          document.getElementById("inputLastName").value = lastName;
        }
        if(response.mail !== undefined) {
          var mail = response.mail
          document.getElementById("inputEmailAddress").value = mail;
        }
        if(response.homeDirectory !== undefined) {
          var homeDirectory = response.homeDirectory
          document.getElementById("inputHomeDirectory").value = homeDirectory
        }
        if(response.homeDrive !== undefined) {
          var homeDrive = response.homeDrive.charAt(0);
          document.getElementById("inputHomeDrive").value = homeDrive;
        }
        if(response.scriptPath !== undefined) {
          document.getElementById("inputScriptPath").value = response.scriptPath;
        }
        if(response.profilePath !== undefined) {
          var profilePath = response.profilePath
          document.getElementById("inputProfilePath").value = profilePath
        }
        if(response.dn !== undefined) {
          var dn = response.dn.split(",");
          dn.shift();
          dn = dn.join(",");
          document.getElementById("inputUserOU").value = dn;
        }
        if(response.memberOf !== undefined) {
          var memberOf = response.memberOf;
          if(Array.isArray(memberOf)) { } else {
            memberOf = [memberOf]
          }
          var items = [];
          memberOf.forEach(getName);
          document.getElementById("inputGroupDN").value = items.join("\r\n");
          function getName(item, index){
            item = item.split(",");
            item = item[0].split("=");
            item = item[1];
            items.push(item);
          }
        }
        if(response.userPrincipalName !== undefined) {
          var upnSuffix = response.userPrincipalName.split("@")[1];
          document.getElementById("inputUPNSuffix").value = upnSuffix;
        }
      }
    })
  }

  api.ouTree(function(outree){
    var ouTreeList = `<ul><li class="jstree-open">Organizational Units<ul>`;
    outree.forEach(element => ouTreeList += `<li value="${element.dn}">${element.name}</li>`)
    ouTreeList = ouTreeList + `</ul></li></ul>`;
    $('#ouTree').html(ouTreeList)
    $('#ouTree').jstree()
    $('#ouTree').on('changed.jstree', function (e, data) {
        var i, j, r = [];
        for(i = 0, j = data.selected.length; i < j; i++) {
          r.push(data.instance.get_node(data.selected[i]).li_attr.value);
        }
        document.getElementById("inputUserOU").value = r.join(', ');
    })
  })

  var cardBody = document.getElementById("card-body");

  function editUser() {

    console.log("Editing User");

    var invalidFeedbackMsg = document.getElementById("invalid-feedback");
    var editUserBtn = document.getElementById("editUserBtn");
    var inputUser = document.getElementById("inputUser-id");
    var inputUserEdit = document.getElementById("inputUser");
    var inputFirstName = document.getElementById("inputFirstName");
    var inputLastName = document.getElementById("inputLastName");
    var actualName = inputFirstName.value + " " + inputLastName.value;
    var inputUPNSuffix = document.getElementById("inputUPNSuffix");
    var inputEmailAddress = document.getElementById("inputEmailAddress");
    var inputHomeDirectory = document.getElementById("inputHomeDirectory");
    var inputHomeDrive = document.getElementById("inputHomeDrive");
    var inputProfilePath = document.getElementById("inputProfilePath");
    var inputScriptPath = document.getElementById("inputScriptPath");

    editUserBtn.setAttribute("disabled","disabled");

    if(inputFirstName.value == "" || inputUser.value == "") {

    if(inputFirstName.value == "" && inputUser.value != "") {
      inputFirstName.classList.add("is-invalid"); editUserBtn.classList.add("is-invalid"); invalidFeedbackMsg.innerHTML = "Missing Fields"; } else { inputFirstName.classList.remove("is-invalid"); }
    if(inputUser.value == "") {
        inputUser.classList.add("is-invalid"); inputUserEdit.classList.add("is-invalid"); editUserBtn.classList.add("is-invalid"); invalidFeedbackMsg.innerHTML = "Missing Fields"; } else { inputUser.classList.remove("is-invalid"); inputUserEdit.classList.remove("is-invalid"); }

    editUserBtn.removeAttribute("disabled");

    } else {

      var username = inputUser.value;

      var data = {}

      if(inputFirstName.value != "" && inputLastName.value != "") { data.displayName = inputFirstName.value + " " + inputLastName.value; } else { data.displayName = inputFirstName.value; }
      if(inputUser.value != "" && inputUPNSuffix.value != "") { data.userPrincipalName = inputUser.value + "@" + inputUPNSuffix.value } else { data.userPrincipalName = inputUser.value }
      if(inputFirstName.value != "") { data.givenName = inputFirstName.value }
      if(inputLastName.value != "") { data.sn = inputLastName.value }
      if(inputEmailAddress.value != "") { data.mail = inputEmailAddress.value.replace(/%USERNAME%/gi, inputUser.value) }
      if(inputUser.value != "") { data.sAMAccountName = inputUser.value }
      if(inputEmailAddress.value != "") { data.proxyAddresses = "SMTP:" + inputEmailAddress.value.replace(/%USERNAME%/gi, inputUser.value); }
      if(inputHomeDirectory.value != "") { data.homeDirectory = inputHomeDirectory.value }
      if(inputProfilePath.value != "") { data.profilePath = inputProfilePath.value }
      if(inputScriptPath.value != "") { data.scriptPath = inputScriptPath.value }
      if(inputHomeDrive.value != "") { data.homeDrive = inputHomeDrive.value }

      data = JSON.stringify(data);

            api.modifyUser(username,data, function(result){

                  if(result == "Success") {
                      window.scrollTo(0,0);
                      cardBody.innerHTML = `<p>${actualName} has been edited successfully</p>
                      <input id="resetPage" onclick="resetPage()" type="button" class="btn btn-success" href="#" value="Back">`;
                  } else {
                    window.scrollTo(0,0);
                    cardBody.innerHTML = `<p>${actualName} was <b>not</b> edited successfully</p>
                    <input id="resetPage" onclick="resetPage()" type="button" class="btn btn-danger" href="#" value="Back">`;
                  }

              })

    }

  }

  function resetPage() {
    cardBody.innerHTML = `<div class="form-group">
                        <label class="small mb-1" for="inputUser">Select User</label>
                        <input autofocus autocomplete="chrome-off" required class="form-control" id="inputUser" type="text" placeholder="e.g. John Smith" value=""/>
                        <input disabled tabindex="-1" readonly style="margin-top:3px;border:0px;font-size:0.8rem" class="form-control" id="inputUser-id">
                    </div>
                    <div class="form-group">
                      <label class="small mb-1" for="inputFirstName">First Name</label>
                      <input autofocus tabindex="1" autocomplete="off" class="form-control" id="inputFirstName" type="text" placeholder="John" value=""/>
                      <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group">
                      <label class="small mb-1" for="inputLastName">Last Name</label>
                      <input tabindex="2" autocomplete="off" class="form-control" id="inputLastName" type="text" placeholder="Smith" value=""/>
                      <div class="invalid-feedback"></div>
                    </div>
                      <div class="form-group">
                        <label class="small mb-1" for="inputUPNSuffix">UPN Suffix</label>
                        <input autocomplete="off" class="form-control" id="inputUPNSuffix" type="text" placeholder="e.g. arunside.school" value=""/>
                      </div>
                      <div class="form-group">
                        <label class="small mb-1" for="inputEmailAddress">Email Address</label>
                        <input autocomplete="off" class="form-control" id="inputEmailAddress" type="text" placeholder="e.g. jsmith@arunside.school" value=""/>
                      </div>
                      <div class="form-group">
                        <label class="small mb-1" for="inputHomeDirectory">Home Directory</label>
                        <input autocomplete="off" class="form-control" id="inputHomeDirectory" type="text" placeholder="e.g. \\\\AS-DC\\\Staff$\\%USERNAME%" value=""/>
                      </div>
                      <div class="form-group">
                        <label class="small mb-1" for="inputHomeDrive">Home Drive Letter</label>
                        <input autocomplete="off" class="form-control" id="inputHomeDrive" type="text" placeholder="e.g. U" maxlength="1" value=""/>
                      </div>
                      <div class="form-group">
                        <label class="small mb-1" for="inputProfilePath">Profile Path</label>
                        <input autocomplete="off" class="form-control" id="inputProfilePath" type="text" placeholder="e.g. \\\\AS-DC\\Profiles$\\%USERNAME%" value=""/>
                      </div>
                      <div class="form-group">
                        <label class="small mb-1" for="inputScriptPath">Logon Script</label>
                        <input autocomplete="off" class="form-control" id="inputScriptPath" type="text" placeholder="e.g. Staff.bat" value=""/>
                      </div>
                      <div class="form-group">
                        <label class="small mb-1" for="inputGroupDN">Member Group Name's (1 Per Line)</label>
                        <textarea disabled class="form-control" id="inputGroupDN" type="text" rows="7" placeholder="e.g. Staff"></textarea>
                      </div>
                      <div class="form-group">
                        <label class="small mb-1" for="ouTree">User OU</label>
                        <input tabindex="-1" disabled autocomplete="off" required style="border:0px" required class="form-control mt-3" id="inputUserOU" value="" placeholder="User OU">
                      </div>

                    <div class="form-group d-flex align-items-center justify-content-between mt-4 mb-0">
                      <input id="editUserBtn" onclick="editUser()" type="button" class="btn btn-success" href="#" value="Edit User">&nbsp;&nbsp;
                      <div id="invalid-feedback" class="invalid-feedback"></div>
                    </div>`;
                        loadAutocomplete();
  }

  function loadAutocomplete(){
      api.allUsers(null,function(users){
        var userList = "";
        users.forEach(getUserInfo)
        function getUserInfo(item,index) {
          var displayName = item.displayName;
          if(item.displayName == undefined) { displayName = item.cn; }; userList += `{ "value": "${item.sAMAccountName}", "label": "${displayName}", "status": "${item.userAccountControl}" },`
        }
        userList = JSON.parse("[" + userList.substring(0, userList.length - 1) + "]");

    $("#inputUser").autocomplete({
        minLength: 0,
        source: function(request, response) {
            var results = $.ui.autocomplete.filter(userList, request.term);
            response(results.slice(0, 12));
        },
         focus: function( event, ui ) {
           $( "#inputUser" ).val( ui.item.label );
           $( "#inputUser-id" ).val( ui.item.value );
           return false;
         },
        select: function( event, ui ) {
          $( "#inputUser" ).val( ui.item.label );
          $( "#inputUser-id" ).val( ui.item.value );
          lookupUser(document.getElementById("inputUser-id").value);
          return false;
        }
      })
      .autocomplete( "instance" )._renderItem = function( ul, item ) {
        return $( "<li>" )
          .append( "<div class='mt-1'>" + item.label + "</div>" )
          .appendTo( ul );
      };
    });
  }

</script>
